// <auto-generated />
using FinalProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250419013656_AddCartAndCartItems")]
    partial class AddCartAndCartItems
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FinalProject.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cart_id");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user");

                    b.HasKey("Id");

                    b.HasIndex("Username");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("FinalProject.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cart_item_id");

                    b.Property<int>("CartId")
                        .HasColumnType("int")
                        .HasColumnName("cart_id");

                    b.Property<string>("EncryptedData")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("encrypted_data");

                    b.Property<string>("EncryptedPrice")
                        .HasColumnType("longtext")
                        .HasColumnName("encrypted_price");

                    b.Property<string>("EncryptedQuantity")
                        .HasColumnType("longtext")
                        .HasColumnName("encrypted_quantity");

                    b.Property<byte[]>("IV")
                        .IsRequired()
                        .HasColumnType("longblob")
                        .HasColumnName("iv");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("FinalProject.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user");

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password");

                    b.Property<byte[]>("UserKey")
                        .IsRequired()
                        .HasColumnType("longblob")
                        .HasColumnName("individual_aes_key");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FinalProject.Models.Cart", b =>
                {
                    b.HasOne("FinalProject.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinalProject.Models.CartItem", b =>
                {
                    b.HasOne("FinalProject.Models.Cart", "Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("FinalProject.Models.Cart", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
